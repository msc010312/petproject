spring.application.name=demo

#Tomcat Server Port Setting
server.port=8091

#UTF-8 Setting
spring.servlet.filter.encoding.filter-name=encodingFilter
spring.servlet.filter.encoding.filter-class=org.springframework.web.filter.CharacterEncodingFilter
spring.servlet.filter.encoding.init-param.encoding=UTF-8
spring.servlet.filter.encoding.init-param.forceEncoding=true
spring.servlet.filter.encoding.url-pattern=/*

### DATASOURCE
#spring.datasource.url=jdbc:mysql://localhost:3306/testdb
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=1234

# THYMELEAF SETTING
spring.thymeleaf.prefix:classpath:/templates/
spring.thymeleaf.suffix:.html
spring.thymeleaf.mode: HTML5
spring.thymeleaf.cache:false

#dbms config? ??????? ??? ?
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE/pet
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.username=system
#spring.datasource.password=1234

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

#---------------------------------------
# OAuth2 setting
#---------------------------------------

#----------------------------------------------------------------
# KAKAO AUTH
#----------------------------------------------------------------
#KAKAO
spring.security.oauth2.client.registration.kakao.client-id=60862fb3be55d33aa6217d58dc5a6384
spring.security.oauth2.client.registration.kakao.client-secret=essEyGG8Pab9psENpkvxZFqiOT88dSDo
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8091/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email,phone_number
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.kakao.logout.redirect.uri=http://localhost:8091/login

#KAKAO PROVIDER
spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id


# ---------------------------------------------------
# NAVER OAUTH
# ---------------------------------------------------
spring.security.oauth2.client.registration.naver.client-id=DkbWb1AdU_12WeWDOwzq
spring.security.oauth2.client.registration.naver.client-secret=HNGsRNZfOJ
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8091/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image,mobile
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.provider=naver

#NAVER PROVIDER
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# ---------------------------------------------------
# GOOGLE OAUTH
# ---------------------------------------------------
#Google
#spring.security.oauth2.client.registration.google.client-id=
#spring.security.oauth2.client.registration.google.client-secret=
#spring.security.oauth2.client.registration.google.scope=email,profile

